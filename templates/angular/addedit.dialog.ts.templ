/*
*   Do not edit this file, this file is generated by the gencrud.py module
*/
import { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material';
import { Component, Inject } from '@angular/core';
import { FormControl, Validators, FormGroup } from '@angular/forms';
import { BaseDialog } from '../../common/dialog';
import { ${ obj.cls }DataService } from './service';


@Component({
    selector: 'app-${ obj.name }-addedit-dialog',
    templateUrl: './addedit.dialog.html',
    styleUrls: ['../../common/dialog.scss']
})
export class AddEdit${ obj.cls }Dialog extends BaseDialog
{
    constructor( dialogRef: MatDialogRef<AddEdit${ obj.cls }Dialog>,
                 @Inject( MAT_DIALOG_DATA ) public data: any, 
                 dataService: ${ obj.cls }DataService )
    { 
        super( dialogRef, dataService, data.mode );
        if ( !this.isEditMode() )
        {
            data.id = 'New';
        }
        this.formGroup = new FormGroup( {
% for field in obj.columns:
            ${ field.name }: new FormControl( data.record.${ field.name },
                                              ${ field.validators } ),
% endfor
        } );
        return;
    }

% for field in obj.columns:
    public get ${ field.name }()
    {
        return ( this.formGroup.get( '${ field.name }' ) );
    }

% endfor

    onSaveClick(): void
    {
        console.log( "AddEdit${ obj.cls }Dialog.onSaveClick() => ", this.formGroup.value );
        this.dataService.updateRecord( this.formGroup.value );
        super.onSaveClick();
        return;
    }
}
