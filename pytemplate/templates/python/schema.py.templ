#
#   Python backend and Angular frontend code generation by Template
#   Copyright (C) 2018 Marc Bertens-Nguyen m.bertens@pe2mbs.nl
#
#   This library is free software; you can redistribute it and/or modify
#   it under the terms of the GNU Library General Public License as
#   published by the Free Software Foundation; either version 2 of the
#   License, or (at your option) any later version.
#
#   This library is distributed in the hope that it will be useful, but
#   WITHOUT ANY WARRANTY; without even the implied warranty of
#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
#   Library General Public License for more details.
#
#   You should have received a copy of the GNU Library General Public
#   License along with this library; if not, write to the Free Software
#   Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
#   MA 02110-1301 USA
#
#   Backend view for the ${obj.name} table, this is generated by the
#   gencrud.py module. When modifing the file make sure that you remove
#   the table from the configuration.
#
from applic.extensions import mm
from ${ obj.application }.${ obj.name }.model import ${ obj.cls }
% if obj.table.Mixin.Schema.Available:
from ${obj.table.Mixin.Schema.Module} import ${obj.table.Mixin.Schema.Class}
% endif
% for field in obj.table.columns:
 % if field.hasRelationship():
from ${ obj.application }.${ field.relationship.name }.schema import ${ field.relationship.name }Schema
 % endif
% endfor


class ${ obj.cls }Schema( mm.ModelSchema
% if obj.table.Mixin.Model.Available:
                , ${obj.table.Mixin.Schema.Class}
% endif
                        ):
    """Schema for the ${obj.name} table, this is generated by the gencrud.py module
    When modifing the file make sure that you remove the table from the configuration.
    """
    class Meta:
        #model = ${ obj.cls }
        fields = [
% for field in obj.table.columns:
 % if field.pType != '':
            '${ field.name }',
 % endif
% endfor
        ]
% for field in obj.table.columns:
 % if field.hasRelationship():
        ${ field.relationship.fieldName }    = mm.Nested( ${ field.relationship.name }Schema )
 % endif
% endfor


${ obj.name }Schema   = ${ obj.cls }Schema()
${ obj.name }sSchema  = ${ obj.cls }Schema( many = True )

