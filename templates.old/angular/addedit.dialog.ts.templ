/*
*   Do not edit this file, this file is generated by the gencrud.py module
*/
import { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material';
import { Component, Inject } from '@angular/core';
import { FormControl, Validators, FormGroup } from '@angular/forms';
import { BaseDialog } from '../../common/dialog';
import { ${cls}DataService } from './service';


@Component({
    selector: 'app-${name}-addedit-dialog',
    templateUrl: './addedit.dialog.html',
    styleUrls: ['../../common/dialog.scss']
})
export class AddEdit${cls}Dialog extends BaseDialog
{
    constructor( dialogRef: MatDialogRef<AddEdit${cls}Dialog>,
                 @Inject( MAT_DIALOG_DATA ) public data: any, 
                 dataService: ${cls}DataService )
    { 
        super( dialogRef, dataService, data.mode );
        if ( !this.isEditMode() )
        {
            data.id = 'New';
        }
        this.formGroup = new FormGroup( {
% for field in columns:
            ${ field[ 'name' ] }: new FormControl( data.record.${ field[ 'name' ] }, [
 % if 'attrs' in field and 'null=False' in field[ 'attrs' ]:
                Validators.required,
 % endif
 % if 'length' in field:
                Validators.maxLength( ${ field[ 'length' ] } ),
 % endif
            ] ),
% endfor
        } );
        return;
    }

% for field in columns:
    public get ${ field[ 'name' ] }()
    {
        return ( this.formGroup.get( '${ field[ 'name' ] }' ) );
    } 
% endfor

    onSaveClick(): void
    {
        console.log( "AddEdit${cls}Dialog.onSaveClick() => ", this.formGroup.value );
        this.dataService.updateRecord( this.formGroup.value );
        super.onSaveClick();
        return;
    }
}
